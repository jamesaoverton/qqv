[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "QQV",
    "section": "",
    "text": "Primer"
  },
  {
    "objectID": "primer.html",
    "href": "primer.html",
    "title": "Primer on Qualitative and Quantitative Values",
    "section": "",
    "text": "This document presents a series of examples of a proposed new way to model quantitative and qualitative values in the context of the Open Bio Ontologies (OBO)."
  },
  {
    "objectID": "primer.html#technical-stuff",
    "href": "primer.html#technical-stuff",
    "title": "Primer on Qualitative and Quantitative Values",
    "section": "Technical Stuff",
    "text": "Technical Stuff\nThis document is a Quarto notebook. First let’s get some technical bits out of the way, such as specifying some classes, object properties, and data properties to reuse below (in YAML format).\n\n\nCode\nfrom src.display import display\n\ncontext = \"\"\"\nclasses:\n  Adelie Penguin (Pygoscelis adeliae): NCBITaxon:9238\n  attribute: :attribute\n  assay: OBI:0000070\n  averaging data transformation: OBI:0200170\n  characteristic: PATO:0000001\n  data item: IAO:0000027\n  entity: BFO:0000001\n  g: unit:g\n  genotypic sex: PATO:0020000\n  male genotypic sex: PATO:0020001\n  mass: PATO:0000125\n  mass measurement assay: OBI:0000445\n  normal mass: PATO:0045030\n  value: :value\nobject properties:\n  conversion of: :conversionOf\n  has attribute: :hasAttribute\n  has characteristic: RO:0000053\n  has specified output: OBI:0000299\n  has value: :hasValue\n  is about: IAO:0000136\n  measures attribute: :measuresAttribute\n  measures entity: :measuresEntity\n  specifies value: :specifiesValue\ndata properties:\n  has quantity: :hasQuantity\n  has unit: :hasUnit\nshort:\n  Adelie Penguin (Pygoscelis adeliae): Adelie Penguin\nreverse:\n  - conversion of\n  - has specified output\n  - measures attribute\n  - measures entity\n  - specifies value\nloose:\n  - is about\n\"\"\"\n\n\nYou can view each example as a diagram, in Turtle syntax, or in a human-readable YAML syntax that was used to generate both the diagram and the Turtle."
  },
  {
    "objectID": "primer.html#characteristics",
    "href": "primer.html#characteristics",
    "title": "Primer on Qualitative and Quantitative Values",
    "section": "Characteristics",
    "text": "Characteristics\nOne of the simplest things we can say in OBO is that an entity has a characteristic, using the ‘has characteristic’ relation. Here we have\n\ntwo very general classes: ‘entity’ and ‘characteristic’\nan instance of the ‘entity’ class named ‘e’\nan anonymous instance of the ‘characteristic’ class\none relation between the instances: ‘has characteristic’\n\n\nCode\ndisplay(context, \"\"\"\nsubject: e\ntype: entity\nhas characteristic:\n  - type: characteristic\n\"\"\")\n\n\nDiagramYAMLTurtle\n\n\n\n\n\n\n\n\n\nG\n\n  \n\nentity\n\n entity   \n\ncharacteristic\n\n characteristic   \n\ne\n\n e   \n\ne->entity\n\n    \n\n_0\n\n   \n\ne->_0\n\n  has characteristic   \n\n_0->characteristic\n\n   \n\n\n\n\n\n\n\nsubject: e\ntype: entity\nhas characteristic:\n  - type: characteristic\n\n\n:e\n  a BFO:0000001 ; # 'entity'\n  RO:0000053 [ # 'has characteristic'\n    a PATO:0000001 # 'characteristic'\n  ] ."
  },
  {
    "objectID": "primer.html#attributes",
    "href": "primer.html#attributes",
    "title": "Primer on Qualitative and Quantitative Values",
    "section": "Attributes",
    "text": "Attributes\nSome characteristics are fundamental to what an entity is. Every penguin has body mass. Every penguin has a genotypic sex. By knowing that something is a penguin, we automatically know that it has these characteristics. Let’s call these characteristics ‘attributes’, and introduce a ‘has attribute’ relation to relate an entity to one of its attributes.\n\nCode\ndisplay(context, \"\"\"\nsubject: e\ntype: entity\nhas attribute:\n  - type: characteristic\n\"\"\")\n\n\nDiagramYAMLTurtle\n\n\n\n\n\n\n\n\n\nG\n\n  \n\nentity\n\n entity   \n\ncharacteristic\n\n characteristic   \n\ne\n\n e   \n\ne->entity\n\n    \n\n_1\n\n   \n\ne->_1\n\n  has attribute   \n\n_1->characteristic\n\n   \n\n\n\n\n\n\n\nsubject: e\ntype: entity\nhas attribute:\n  - type: characteristic\n\n\n:e\n  a BFO:0000001 ; # 'entity'\n  :hasAttribute [\n    a PATO:0000001 # 'characteristic'\n  ] ."
  },
  {
    "objectID": "primer.html#values",
    "href": "primer.html#values",
    "title": "Primer on Qualitative and Quantitative Values",
    "section": "Values",
    "text": "Values\nOther characteristics can be different at different times or under different conditions. This particular penguin might be male, and it might have a body mass of 3750g. We expect that its genotypic sex won’t change, but we know that its body mass will change. Let’s call these characteristics ‘values’.\nEvery value is a more specific form of an attribute. A penguin always has one body mass attribute, and that attribute has values at different times and under different conditions.\nWe’ll intoduce a ‘has value’ relation between an attribute and one of its values.\n\nCode\ndisplay(context, \"\"\"\nsubject: e\ntype: entity\nhas attribute:\n  - type: characteristic\n    has value:\n      - type: characteristic\n\"\"\")\n\n\nDiagramYAMLTurtle\n\n\n\n\n\n\n\n\n\nG\n\n  \n\nentity\n\n entity   \n\ncharacteristic\n\n characteristic   \n\ne\n\n e   \n\ne->entity\n\n    \n\n_2\n\n   \n\ne->_2\n\n  has attribute   \n\n_2->characteristic\n\n    \n\n_3\n\n   \n\n_2->_3\n\n  has value   \n\n_3->characteristic\n\n   \n\n\n\n\n\n\n\nsubject: e\ntype: entity\nhas attribute:\n  - type: characteristic\n    has value:\n      - type: characteristic\n\n\n:e\n  a BFO:0000001 ; # 'entity'\n  :hasAttribute [\n    a PATO:0000001 ; # 'characteristic'\n    :hasValue [\n      a PATO:0000001 # 'characteristic'\n    ]\n  ] ."
  },
  {
    "objectID": "primer.html#penguin-sex",
    "href": "primer.html#penguin-sex",
    "title": "Primer on Qualitative and Quantitative Values",
    "section": "Penguin Sex",
    "text": "Penguin Sex\nSay we’re studying penguins on an island. We give names to the penguins we’re studying, and we name one of the “N1A1”. N1A1 is male (i.e. has a male genotype). We say that N1A1 ‘has attribute’ a ‘genotpic sex’, and that attribute ‘has value’ a ‘male genotypic sex’. Since we don’t need to say anything more about these characteristics, we’ll leave them anonymous.\n\nCode\ndisplay(context, \"\"\"\nsubject: N1A1\ntype: Adelie Penguin (Pygoscelis adeliae)\nhas attribute:\n  - type: genotypic sex\n    has value:\n      - type: male genotypic sex\n\"\"\")\n\n\nDiagramYAMLTurtle\n\n\n\n\n\n\n\n\n\nG\n\n  \n\nAdelie Penguin (Pygoscelis adeliae)\n\n Adelie Penguin   \n\ngenotypic sex\n\n genotypic sex   \n\nmale genotypic sex\n\n male genotypic sex   \n\nN1A1\n\n N1A1   \n\nN1A1->Adelie Penguin (Pygoscelis adeliae)\n\n    \n\n_4\n\n   \n\nN1A1->_4\n\n  has attribute   \n\n_4->genotypic sex\n\n    \n\n_5\n\n   \n\n_4->_5\n\n  has value   \n\n_5->male genotypic sex\n\n   \n\n\n\n\n\n\n\nsubject: N1A1\ntype: Adelie Penguin (Pygoscelis adeliae)\nhas attribute:\n  - type: genotypic sex\n    has value:\n      - type: male genotypic sex\n\n\n:N1A1\n  a NCBITaxon:9238 ; # 'Adelie Penguin (Pygoscelis adeliae)'\n  :hasAttribute [\n    a PATO:0020000 ; # 'genotypic sex'\n    :hasValue [\n      a PATO:0020001 # 'male genotypic sex'\n    ]\n  ] ."
  },
  {
    "objectID": "primer.html#penguin-mass",
    "href": "primer.html#penguin-mass",
    "title": "Primer on Qualitative and Quantitative Values",
    "section": "Penguin Mass",
    "text": "Penguin Mass\nWe can also talk about N1A1’s body mass using a ‘mass’ attribute and value. We might just want to say that its mass is “normal”.\n\nCode\ndisplay(context, \"\"\"\nsubject: N1A1\ntype: Adelie Penguin (Pygoscelis adeliae)\nhas attribute:\n  - type: mass\n    has value:\n      - type: normal mass\n\"\"\")\n\n\nDiagramYAMLTurtle\n\n\n\n\n\n\n\n\n\nG\n\n  \n\nAdelie Penguin (Pygoscelis adeliae)\n\n Adelie Penguin   \n\nmass\n\n mass   \n\nnormal mass\n\n normal mass   \n\nN1A1\n\n N1A1   \n\nN1A1->Adelie Penguin (Pygoscelis adeliae)\n\n    \n\n_6\n\n   \n\nN1A1->_6\n\n  has attribute   \n\n_6->mass\n\n    \n\n_7\n\n   \n\n_6->_7\n\n  has value   \n\n_7->normal mass\n\n   \n\n\n\n\n\n\n\nsubject: N1A1\ntype: Adelie Penguin (Pygoscelis adeliae)\nhas attribute:\n  - type: mass\n    has value:\n      - type: normal mass\n\n\n:N1A1\n  a NCBITaxon:9238 ; # 'Adelie Penguin (Pygoscelis adeliae)'\n  :hasAttribute [\n    a PATO:0000125 ; # 'mass'\n    :hasValue [\n      a PATO:0045030 # 'normal mass'\n    ]\n  ] .\n\n\n\nThis is an example of a “categorical” value, because it specifies that the attribute falls into a broad category."
  },
  {
    "objectID": "primer.html#scalar-values",
    "href": "primer.html#scalar-values",
    "title": "Primer on Qualitative and Quantitative Values",
    "section": "Scalar Values",
    "text": "Scalar Values\nIn order to specify scalar values such as “3750g” let’s introduce ‘has quantity’ and ‘has unit’ relations that let us get more specific about values.\n\nCode\ndisplay(context, \"\"\"\nsubject: N1A1\ntype: Adelie Penguin (Pygoscelis adeliae)\nhas attribute:\n  - type: characteristic\n    has value:\n      - type: characteristic\n        has quantity: 3750\n        has unit: g\n\"\"\")\n\n\nDiagramYAMLTurtle\n\n\n\n\n\n\n\n\n\nG\n\n  \n\nAdelie Penguin (Pygoscelis adeliae)\n\n Adelie Penguin   \n\ncharacteristic\n\n characteristic   \n\nN1A1\n\n N1A1   \n\nN1A1->Adelie Penguin (Pygoscelis adeliae)\n\n    \n\n_8\n\n   \n\nN1A1->_8\n\n  has attribute   \n\n_8->characteristic\n\n    \n\n_9\n\n   \n\n_8->_9\n\n  has value   \n\n_9->characteristic\n\n    \n\n“3750”^^xsd:integer\n\n“3750”^^xsd:integer   \n\n“3750”^^xsd:integer->_9\n\n  has quantity   \n\ng\n\nunit:g   \n\ng->_9\n\n  has unit  \n\n\n\n\n\n\n\nsubject: N1A1\ntype: Adelie Penguin (Pygoscelis adeliae)\nhas attribute:\n  - type: characteristic\n    has value:\n      - type: characteristic\n        has quantity: 3750\n        has unit: g\n\n\n:N1A1\n  a NCBITaxon:9238 ; # 'Adelie Penguin (Pygoscelis adeliae)'\n  :hasAttribute [\n    a PATO:0000001 ; # 'characteristic'\n    :hasValue [\n      a PATO:0000001 ; # 'characteristic'\n      :hasQuantity \"3750\"^^xsd:integer ;\n      :hasUnit unit:g\n    ]\n  ] ."
  },
  {
    "objectID": "primer.html#penguin-mass-in-grams",
    "href": "primer.html#penguin-mass-in-grams",
    "title": "Primer on Qualitative and Quantitative Values",
    "section": "Penguin Mass in Grams",
    "text": "Penguin Mass in Grams\nWe say that N1A1 has a body mass of 3750g like this:\n\nCode\ndisplay(context, \"\"\"\nsubject: N1A1\ntype: Adelie Penguin (Pygoscelis adeliae)\nhas attribute:\n  - type: mass\n    has value:\n      - type: mass\n        has quantity: 3750\n        has unit: g\n\"\"\")\n\n\nDiagramYAMLTurtle\n\n\n\n\n\n\n\n\n\nG\n\n  \n\nAdelie Penguin (Pygoscelis adeliae)\n\n Adelie Penguin   \n\nmass\n\n mass   \n\nN1A1\n\n N1A1   \n\nN1A1->Adelie Penguin (Pygoscelis adeliae)\n\n    \n\n_10\n\n   \n\nN1A1->_10\n\n  has attribute   \n\n_10->mass\n\n    \n\n_11\n\n   \n\n_10->_11\n\n  has value   \n\n_11->mass\n\n    \n\n“3750”^^xsd:integer\n\n“3750”^^xsd:integer   \n\n“3750”^^xsd:integer->_11\n\n  has quantity   \n\ng\n\nunit:g   \n\ng->_11\n\n  has unit  \n\n\n\n\n\n\n\nsubject: N1A1\ntype: Adelie Penguin (Pygoscelis adeliae)\nhas attribute:\n  - type: mass\n    has value:\n      - type: mass\n        has quantity: 3750\n        has unit: g\n\n\n:N1A1\n  a NCBITaxon:9238 ; # 'Adelie Penguin (Pygoscelis adeliae)'\n  :hasAttribute [\n    a PATO:0000125 ; # 'mass'\n    :hasValue [\n      a PATO:0000125 ; # 'mass'\n      :hasQuantity \"3750\"^^xsd:integer ;\n      :hasUnit unit:g\n    ]\n  ] .\n\n\n\nNote that the attribute and the value belong to the same class ‘mass’, but we use the ‘has quality’ and ‘has unit’ data properties to make the value more specific than the attribute."
  },
  {
    "objectID": "primer.html#values-without-attributes",
    "href": "primer.html#values-without-attributes",
    "title": "Primer on Qualitative and Quantitative Values",
    "section": "Values Without Attributes",
    "text": "Values Without Attributes\nIn all our examples, the value is still a characteristic the entity. The benefit of distinguishing attributes from values is in linking values to each other (discussed below), in grouping values together when they share an attribute, in connecting a measurement process to the attribute it measures (and thus to the possible values), in validating data, etc.\nIn all our examples here we will consistently distinguish attributes and values. If you don’t want to make this distinction, you can just use ‘has characteristic’ to connect an entity to a specific value.\n\nCode\ndisplay(context, \"\"\"\nsubject: e\ntype: entity\nhas characteristic:\n  - type: mass\n    has quantity: 3750\n    has unit: g\n  - type: normal mass\n  - type: male genotypic sex\n\"\"\")\n\n\nDiagramYAMLTurtle\n\n\n\n\n\n\n\n\n\nG\n\n  \n\nentity\n\n entity   \n\nmass\n\n mass   \n\nnormal mass\n\n normal mass   \n\nmale genotypic sex\n\n male genotypic sex   \n\ne\n\n e   \n\ne->entity\n\n    \n\n_12\n\n   \n\ne->_12\n\n  has characteristic   \n\n_13\n\n   \n\ne->_13\n\n  has characteristic   \n\n_14\n\n   \n\ne->_14\n\n  has characteristic   \n\n_12->mass\n\n    \n\n_13->normal mass\n\n    \n\n_14->male genotypic sex\n\n    \n\n“3750”^^xsd:integer\n\n“3750”^^xsd:integer   \n\n“3750”^^xsd:integer->_12\n\n  has quantity   \n\ng\n\nunit:g   \n\ng->_12\n\n  has unit  \n\n\n\n\n\n\n\nsubject: e\ntype: entity\nhas characteristic:\n  - type: mass\n    has quantity: 3750\n    has unit: g\n  - type: normal mass\n  - type: male genotypic sex\n\n\n:e\n  a BFO:0000001 ; # 'entity'\n  RO:0000053 [ # 'has characteristic'\n    a PATO:0000125 ; # 'mass'\n    :hasQuantity \"3750\"^^xsd:integer ;\n    :hasUnit unit:g\n  ] , [\n    a PATO:0045030 # 'normal mass'\n  ] , [\n    a PATO:0020001 # 'male genotypic sex'\n  ] ."
  },
  {
    "objectID": "primer.html#penguin-mass-data",
    "href": "primer.html#penguin-mass-data",
    "title": "Primer on Qualitative and Quantitative Values",
    "section": "Penguin Mass Data",
    "text": "Penguin Mass Data\nIn our example we measured N1A1’s body mass. In OBI we call that measurement process a ‘mass measurement assay’, which outputs an IAO ‘data item’. A ‘data item’ is an ‘information content entity’ (ICE), and ICEs are about things. So we can say that there is a data item about the value.\n\nCode\ndisplay(context, \"\"\"\n- subject: N1A1\n  type: Adelie Penguin (Pygoscelis adeliae)\n  has attribute: _:N1A1_mass_attribute\n- subject: _:N1A1_mass_attribute\n  type: mass\n  has value: _:N1A1_mass_value\n- subject: _:N1A1_mass_value\n  type: mass\n- subject: _:N1A1_data_item\n  type: data item\n  is about: _:N1A1_mass_value\n\"\"\")\n\n\nDiagramYAMLTurtle\n\n\n\n\n\n\n\n\n\nG\n\n  \n\nAdelie Penguin (Pygoscelis adeliae)\n\n Adelie Penguin   \n\nmass\n\n mass   \n\ndata item\n\n data item   \n\nN1A1\n\n N1A1   \n\nN1A1->Adelie Penguin (Pygoscelis adeliae)\n\n    \n\n_:N1A1_mass_attribute\n\n   \n\nN1A1->_:N1A1_mass_attribute\n\n  has attribute   \n\n_:N1A1_mass_attribute->mass\n\n    \n\n_:N1A1_mass_value\n\n   \n\n:N1A1_mass_attribute->:N1A1_mass_value\n\n  has value   \n\n_:N1A1_mass_value->mass\n\n    \n\n_:N1A1_data_item\n\n   \n\n_:N1A1_data_item->data item\n\n    \n\n:N1A1_data_item->:N1A1_mass_value\n\n  is about  \n\n\n\n\n\n\n\n- subject: N1A1\n  type: Adelie Penguin (Pygoscelis adeliae)\n  has attribute: _:N1A1_mass_attribute\n- subject: _:N1A1_mass_attribute\n  type: mass\n  has value: _:N1A1_mass_value\n- subject: _:N1A1_mass_value\n  type: mass\n- subject: _:N1A1_data_item\n  type: data item\n  is about: _:N1A1_mass_value\n\n\n:N1A1\n  a NCBITaxon:9238 ; # 'Adelie Penguin (Pygoscelis adeliae)'\n  :hasAttribute _:N1A1_mass_attribute .\n\n:_:N1A1_mass_attribute\n  a PATO:0000125 ; # 'mass'\n  :hasValue _:N1A1_mass_value .\n\n:_:N1A1_mass_value\n  a PATO:0000125 . # 'mass'\n\n:_:N1A1_data_item\n  a IAO:0000027 ; # 'data item'\n  IAO:0000136 _:N1A1_mass_value . # 'is about'\n\n\n\nAn assay ‘has specified output’ some ‘data item’:\n\nCode\ndisplay(context, \"\"\"\n- subject: N1A1\n  type: Adelie Penguin (Pygoscelis adeliae)\n  has attribute: _:N1A1_mass_attribute\n- subject: _:N1A1_mass_attribute\n  type: mass\n  has value: _:N1A1_mass_value\n- subject: _:N1A1_mass_value\n  type: mass\n- subject: _:N1A1_data_item\n  type: data item\n  is about: _:N1A1_mass_value\n- subject: _:N1A1_mass_assay\n  type: mass measurement assay\n  has specified output: _:N1A1_data_item\n\"\"\")\n\n\nDiagramYAMLTurtle\n\n\n\n\n\n\n\n\n\nG\n\n  \n\nAdelie Penguin (Pygoscelis adeliae)\n\n Adelie Penguin   \n\nmass\n\n mass   \n\ndata item\n\n data item   \n\nmass measurement assay\n\n mass measurement assay   \n\nN1A1\n\n N1A1   \n\nN1A1->Adelie Penguin (Pygoscelis adeliae)\n\n    \n\n_:N1A1_mass_attribute\n\n   \n\nN1A1->_:N1A1_mass_attribute\n\n  has attribute   \n\n_:N1A1_mass_attribute->mass\n\n    \n\n_:N1A1_mass_value\n\n   \n\n:N1A1_mass_attribute->:N1A1_mass_value\n\n  has value   \n\n_:N1A1_mass_value->mass\n\n    \n\n_:N1A1_data_item\n\n   \n\n_:N1A1_data_item->data item\n\n    \n\n:N1A1_data_item->:N1A1_mass_value\n\n  is about   \n\n_:N1A1_mass_assay\n\n   \n\n:N1A1_data_item->:N1A1_mass_assay\n\n  has specified output   \n\n_:N1A1_mass_assay->mass measurement assay\n\n   \n\n\n\n\n\n\n\n- subject: N1A1\n  type: Adelie Penguin (Pygoscelis adeliae)\n  has attribute: _:N1A1_mass_attribute\n- subject: _:N1A1_mass_attribute\n  type: mass\n  has value: _:N1A1_mass_value\n- subject: _:N1A1_mass_value\n  type: mass\n- subject: _:N1A1_data_item\n  type: data item\n  is about: _:N1A1_mass_value\n- subject: _:N1A1_mass_assay\n  type: mass measurement assay\n  has specified output: _:N1A1_data_item\n\n\n:N1A1\n  a NCBITaxon:9238 ; # 'Adelie Penguin (Pygoscelis adeliae)'\n  :hasAttribute _:N1A1_mass_attribute .\n\n:_:N1A1_mass_attribute\n  a PATO:0000125 ; # 'mass'\n  :hasValue _:N1A1_mass_value .\n\n:_:N1A1_mass_value\n  a PATO:0000125 . # 'mass'\n\n:_:N1A1_data_item\n  a IAO:0000027 ; # 'data item'\n  IAO:0000136 _:N1A1_mass_value . # 'is about'\n\n:_:N1A1_mass_assay\n  a OBI:0000445 ; # 'mass measurement assay'\n  OBI:0000299 _:N1A1_data_item . # 'has specified output'\n\n\n\nLet’s introduce a ‘measured by’ relation that connects the value to the assay that measured it.\n\nCode\ndisplay(context, \"\"\"\n- subject: N1A1\n  type: Adelie Penguin (Pygoscelis adeliae)\n  has attribute: _:N1A1_mass_attribute\n- subject: _:N1A1_mass_attribute\n  type: mass\n  has value: _:N1A1_mass_value\n- subject: _:N1A1_mass_value\n  type: mass\n  measured by: _:N1A1_mass_assay\n- subject: _:N1A1_data_item\n  type: data item\n  is about: _:N1A1_mass_value\n- subject: _:N1A1_mass_assay\n  type: mass measurement assay\n  has specified output: _:N1A1_data_item\n\"\"\")\n\n\nDiagramYAMLTurtle\n\n\n\n\n\n\n\n\n\nG\n\n  \n\nAdelie Penguin (Pygoscelis adeliae)\n\n Adelie Penguin   \n\nmass\n\n mass   \n\ndata item\n\n data item   \n\nmass measurement assay\n\n mass measurement assay   \n\nN1A1\n\n N1A1   \n\nN1A1->Adelie Penguin (Pygoscelis adeliae)\n\n    \n\n_:N1A1_mass_attribute\n\n   \n\nN1A1->_:N1A1_mass_attribute\n\n  has attribute   \n\n_:N1A1_mass_attribute->mass\n\n    \n\n_:N1A1_mass_value\n\n   \n\n:N1A1_mass_attribute->:N1A1_mass_value\n\n  has value   \n\n_:N1A1_mass_value->mass\n\n    \n\n_:N1A1_mass_assay\n\n   \n\n:N1A1_mass_value->:N1A1_mass_assay\n\n  measured by   \n\n_:N1A1_data_item\n\n   \n\n_:N1A1_data_item->data item\n\n    \n\n:N1A1_data_item->:N1A1_mass_value\n\n  is about   \n\n:N1A1_data_item->:N1A1_mass_assay\n\n  has specified output   \n\n_:N1A1_mass_assay->mass measurement assay\n\n   \n\n\n\n\n\n\n\n- subject: N1A1\n  type: Adelie Penguin (Pygoscelis adeliae)\n  has attribute: _:N1A1_mass_attribute\n- subject: _:N1A1_mass_attribute\n  type: mass\n  has value: _:N1A1_mass_value\n- subject: _:N1A1_mass_value\n  type: mass\n  measured by: _:N1A1_mass_assay\n- subject: _:N1A1_data_item\n  type: data item\n  is about: _:N1A1_mass_value\n- subject: _:N1A1_mass_assay\n  type: mass measurement assay\n  has specified output: _:N1A1_data_item\n\n\n:N1A1\n  a NCBITaxon:9238 ; # 'Adelie Penguin (Pygoscelis adeliae)'\n  :hasAttribute _:N1A1_mass_attribute .\n\n:_:N1A1_mass_attribute\n  a PATO:0000125 ; # 'mass'\n  :hasValue _:N1A1_mass_value .\n\n:_:N1A1_mass_value\n  a PATO:0000125 ; # 'mass'\n  :measured by _:N1A1_mass_assay .\n\n:_:N1A1_data_item\n  a IAO:0000027 ; # 'data item'\n  IAO:0000136 _:N1A1_mass_value . # 'is about'\n\n:_:N1A1_mass_assay\n  a OBI:0000445 ; # 'mass measurement assay'\n  OBI:0000299 _:N1A1_data_item . # 'has specified output'\n\n\n\nIf we don’t want to mention the data item, we have\n\nCode\ndisplay(context, \"\"\"\nsubject: N1A1\ntype: Adelie Penguin (Pygoscelis adeliae)\nhas attribute:\n  - type: mass\n    has value:\n      - type: mass\n        measured by:\n          - type: mass measurement assay\n\"\"\")\n\n\nDiagramYAMLTurtle\n\n\n\n\n\n\n\n\n\nG\n\n  \n\nAdelie Penguin (Pygoscelis adeliae)\n\n Adelie Penguin   \n\nmass\n\n mass   \n\nmass measurement assay\n\n mass measurement assay   \n\nN1A1\n\n N1A1   \n\nN1A1->Adelie Penguin (Pygoscelis adeliae)\n\n    \n\n_15\n\n   \n\nN1A1->_15\n\n  has attribute   \n\n_15->mass\n\n    \n\n_16\n\n   \n\n_15->_16\n\n  has value   \n\n_16->mass\n\n    \n\n_17\n\n   \n\n_16->_17\n\n  measured by   \n\n_17->mass measurement assay\n\n   \n\n\n\n\n\n\n\nsubject: N1A1\ntype: Adelie Penguin (Pygoscelis adeliae)\nhas attribute:\n  - type: mass\n    has value:\n      - type: mass\n        measured by:\n          - type: mass measurement assay\n\n\n:N1A1\n  a NCBITaxon:9238 ; # 'Adelie Penguin (Pygoscelis adeliae)'\n  :hasAttribute [\n    a PATO:0000125 ; # 'mass'\n    :hasValue [\n      a PATO:0000125 ; # 'mass'\n      :measured by [\n        a OBI:0000445 # 'mass measurement assay'\n      ]\n    ]\n  ] .\n\n\n\nSo the general case would be:\n\nCode\ndisplay(context, \"\"\"\nsubject: e\ntype: entity\nhas attribute:\n  - type: characteristic\n    has value:\n      - type: characteristic\n        measured by:\n          - type: assay\n\"\"\")\n\n\nDiagramYAMLTurtle\n\n\n\n\n\n\n\n\n\nG\n\n  \n\nentity\n\n entity   \n\ncharacteristic\n\n characteristic   \n\nassay\n\n assay   \n\ne\n\n e   \n\ne->entity\n\n    \n\n_18\n\n   \n\ne->_18\n\n  has attribute   \n\n_18->characteristic\n\n    \n\n_19\n\n   \n\n_18->_19\n\n  has value   \n\n_19->characteristic\n\n    \n\n_20\n\n   \n\n_19->_20\n\n  measured by   \n\n_20->assay\n\n   \n\n\n\n\n\n\n\nsubject: e\ntype: entity\nhas attribute:\n  - type: characteristic\n    has value:\n      - type: characteristic\n        measured by:\n          - type: assay\n\n\n:e\n  a BFO:0000001 ; # 'entity'\n  :hasAttribute [\n    a PATO:0000001 ; # 'characteristic'\n    :hasValue [\n      a PATO:0000001 ; # 'characteristic'\n      :measured by [\n        a OBI:0000070 # 'assay'\n      ]\n    ]\n  ] ."
  },
  {
    "objectID": "primer.html#changes-to-assay-modelling",
    "href": "primer.html#changes-to-assay-modelling",
    "title": "Primer on Qualitative and Quantitative Values",
    "section": "Changes to Assay Modelling",
    "text": "Changes to Assay Modelling\nCurrently, OBI does not work like this. An OBI assay has a material entity as its “evaluant”, and the output data item ‘is about’ the evaluant. So the diagram looks like this:\n\nCode\ndisplay(context, \"\"\"\n- subject: N1A1\n  type: Adelie Penguin (Pygoscelis adeliae)\n  has attribute: _:N1A1_mass_attribute\n- subject: _:N1A1_mass_attribute\n  type: mass\n  has value: _:N1A1_mass_value\n- subject: _:N1A1_mass_value\n  type: mass\n- subject: _:N1A1_data_item\n  type: data item\n  is about: N1A1\n- subject: _:N1A1_mass_assay\n  type: mass measurement assay\n  has specified output: _:N1A1_data_item\n\"\"\")\n\n\nDiagramYAMLTurtle\n\n\n\n\n\n\n\n\n\nG\n\n  \n\nAdelie Penguin (Pygoscelis adeliae)\n\n Adelie Penguin   \n\nmass\n\n mass   \n\ndata item\n\n data item   \n\nmass measurement assay\n\n mass measurement assay   \n\nN1A1\n\n N1A1   \n\nN1A1->Adelie Penguin (Pygoscelis adeliae)\n\n    \n\n_:N1A1_mass_attribute\n\n   \n\nN1A1->_:N1A1_mass_attribute\n\n  has attribute   \n\n_:N1A1_mass_attribute->mass\n\n    \n\n_:N1A1_mass_value\n\n   \n\n:N1A1_mass_attribute->:N1A1_mass_value\n\n  has value   \n\n_:N1A1_mass_value->mass\n\n    \n\n_:N1A1_data_item\n\n   \n\n_:N1A1_data_item->data item\n\n    \n\n_:N1A1_data_item->N1A1\n\n  is about   \n\n_:N1A1_mass_assay\n\n   \n\n:N1A1_data_item->:N1A1_mass_assay\n\n  has specified output   \n\n_:N1A1_mass_assay->mass measurement assay\n\n   \n\n\n\n\n\n\n\n- subject: N1A1\n  type: Adelie Penguin (Pygoscelis adeliae)\n  has attribute: _:N1A1_mass_attribute\n- subject: _:N1A1_mass_attribute\n  type: mass\n  has value: _:N1A1_mass_value\n- subject: _:N1A1_mass_value\n  type: mass\n- subject: _:N1A1_data_item\n  type: data item\n  is about: N1A1\n- subject: _:N1A1_mass_assay\n  type: mass measurement assay\n  has specified output: _:N1A1_data_item\n\n\n:N1A1\n  a NCBITaxon:9238 ; # 'Adelie Penguin (Pygoscelis adeliae)'\n  :hasAttribute _:N1A1_mass_attribute .\n\n:_:N1A1_mass_attribute\n  a PATO:0000125 ; # 'mass'\n  :hasValue _:N1A1_mass_value .\n\n:_:N1A1_mass_value\n  a PATO:0000125 . # 'mass'\n\n:_:N1A1_data_item\n  a IAO:0000027 ; # 'data item'\n  IAO:0000136 :N1A1 . # 'is about'\n\n:_:N1A1_mass_assay\n  a OBI:0000445 ; # 'mass measurement assay'\n  OBI:0000299 _:N1A1_data_item . # 'has specified output'\n\n\n\nNothing connects the data item to the relevant value. An ICE can have multiple ‘is about’ relations, but it may be better to introduce a ‘specifies value’ relation.\nOBI assays have material entities as inputs but in many cases the point of an assay is to measure a process. We never measure everything about a target entity, but we can often specify which attribute an assay is measuring. The OBI assay template has a ‘target entity’ column which contains a mixture of material entities, processes, and characteristics. OBI assay modelling could be improved by introducing ‘measures entity’ and ‘measures attribute’ relations. The range for ‘measures attribute’ would simply be any attribute. The range for ‘measures entity’ would be ‘material entity’ or ‘process’ or (arguably) ‘spatial region’ – the same as the domain for ‘has attribute’.\n\n\n\nassay\ninput\nmeasures entity\nmeasures attribute\n\n\n\n\nmass measurement assay\nmaterial entity\nmaterial entity\nmass\n\n\nbinding assay\nmaterial entity\nbinding\nbinding strength/time ?\n\n\nbasophil assay\nblood\nbasophil\ncount ?\n\n\ncell-killing\ncell population\ncell\ncell killing\n\n\n\nWe would then say that the assay outputs a data item, and that data item ‘specifies value’ some value, which is a value of the measured attribute, which is an attribute of the measured entity.\nIncluding all those links at once, we get:\n\nCode\ndisplay(context, \"\"\"\n- subject: N1A1\n  type: Adelie Penguin (Pygoscelis adeliae)\n  has attribute: _:N1A1_mass_attribute\n- subject: _:N1A1_mass_attribute\n  type: mass\n  has value: _:N1A1_mass_value\n- subject: _:N1A1_mass_value\n  type: mass\n  measured by: _:N1A1_mass_assay\n- subject: _:N1A1_data_item\n  type: data item\n  specifies value: _:N1A1_mass_value\n- subject: _:N1A1_mass_assay\n  type: mass measurement assay\n  has specified output: _:N1A1_data_item\n  measures attribute: _:N1A1_mass_attribute\n  measures entity: N1A1\n\"\"\")\n\n\nDiagramYAMLTurtle\n\n\n\n\n\n\n\n\n\nG\n\n  \n\nAdelie Penguin (Pygoscelis adeliae)\n\n Adelie Penguin   \n\nmass\n\n mass   \n\ndata item\n\n data item   \n\nmass measurement assay\n\n mass measurement assay   \n\nN1A1\n\n N1A1   \n\nN1A1->Adelie Penguin (Pygoscelis adeliae)\n\n    \n\n_:N1A1_mass_attribute\n\n   \n\nN1A1->_:N1A1_mass_attribute\n\n  has attribute   \n\n_:N1A1_mass_assay\n\n   \n\nN1A1->_:N1A1_mass_assay\n\n  measures entity   \n\n_:N1A1_mass_attribute->mass\n\n    \n\n_:N1A1_mass_value\n\n   \n\n:N1A1_mass_attribute->:N1A1_mass_value\n\n  has value   \n\n:N1A1_mass_attribute->:N1A1_mass_assay\n\n  measures attribute   \n\n_:N1A1_mass_value->mass\n\n    \n\n_:N1A1_data_item\n\n   \n\n:N1A1_mass_value->:N1A1_data_item\n\n  specifies value   \n\n:N1A1_mass_value->:N1A1_mass_assay\n\n  measured by   \n\n_:N1A1_data_item->data item\n\n    \n\n:N1A1_data_item->:N1A1_mass_assay\n\n  has specified output   \n\n_:N1A1_mass_assay->mass measurement assay\n\n   \n\n\n\n\n\n\n\n- subject: N1A1\n  type: Adelie Penguin (Pygoscelis adeliae)\n  has attribute: _:N1A1_mass_attribute\n- subject: _:N1A1_mass_attribute\n  type: mass\n  has value: _:N1A1_mass_value\n- subject: _:N1A1_mass_value\n  type: mass\n  measured by: _:N1A1_mass_assay\n- subject: _:N1A1_data_item\n  type: data item\n  specifies value: _:N1A1_mass_value\n- subject: _:N1A1_mass_assay\n  type: mass measurement assay\n  has specified output: _:N1A1_data_item\n  measures attribute: _:N1A1_mass_attribute\n  measures entity: N1A1\n\n\n:N1A1\n  a NCBITaxon:9238 ; # 'Adelie Penguin (Pygoscelis adeliae)'\n  :hasAttribute _:N1A1_mass_attribute .\n\n:_:N1A1_mass_attribute\n  a PATO:0000125 ; # 'mass'\n  :hasValue _:N1A1_mass_value .\n\n:_:N1A1_mass_value\n  a PATO:0000125 ; # 'mass'\n  :measured by _:N1A1_mass_assay .\n\n:_:N1A1_data_item\n  a IAO:0000027 ; # 'data item'\n  :specifiesValue _:N1A1_mass_value .\n\n:_:N1A1_mass_assay\n  a OBI:0000445 ; # 'mass measurement assay'\n  OBI:0000299 _:N1A1_data_item ; # 'has specified output'\n  :measuresAttribute _:N1A1_mass_attribute ;\n  :measuresEntity :N1A1 ."
  },
  {
    "objectID": "primer.html#penguin-mass-in-kilograms",
    "href": "primer.html#penguin-mass-in-kilograms",
    "title": "Primer on Qualitative and Quantitative Values",
    "section": "Penguin Mass in Kilograms",
    "text": "Penguin Mass in Kilograms\nWe often want to convert a scalar value from one unit system to another. In our RDF representation, a value cannot have more than one ‘has quantity’ or ‘has unit’ property, because we wouldn’t keep track of which quantity goes with which unit. Instead we can use multiple values, and keep track of the connection between them using a new ‘conversion of’ relation.\n\nCode\ndisplay(context, \"\"\"\n- subject: N1A1\n  type: Adelie Penguin (Pygoscelis adeliae)\n  has attribute:\n    - type: mass\n      has value:\n        - _:N1A1_mass_value_g\n        - _:N1A1_mass_value_kg\n- subject: _:N1A1_mass_value_g\n  type: mass\n  has quantity: 3750\n  has unit: g\n- subject: _:N1A1_mass_value_kg\n  type: mass\n  has quantity: 3.750\n  has unit: kg\n  conversion of: _:N1A1_mass_value_g\n\"\"\")\n\n\nDiagramYAMLTurtle\n\n\n\n\n\n\n\n\n\nG\n\n  \n\nAdelie Penguin (Pygoscelis adeliae)\n\n Adelie Penguin   \n\nmass\n\n mass   \n\nN1A1\n\n N1A1   \n\nN1A1->Adelie Penguin (Pygoscelis adeliae)\n\n    \n\n_21\n\n   \n\nN1A1->_21\n\n  has attribute   \n\n_21->mass\n\n    \n\n_:N1A1_mass_value_g\n\n   \n\n21->:N1A1_mass_value_g\n\n  has value   \n\n_:N1A1_mass_value_kg\n\n   \n\n21->:N1A1_mass_value_kg\n\n  has value   \n\n_:N1A1_mass_value_g->mass\n\n    \n\n:N1A1_mass_value_g->:N1A1_mass_value_kg\n\n  conversion of   \n\n_:N1A1_mass_value_kg->mass\n\n    \n\n“3750”^^xsd:integer\n\n“3750”^^xsd:integer   \n\n“3750”^^xsd:integer->_:N1A1_mass_value_g\n\n  has quantity   \n\ng\n\nunit:g   \n\ng->_:N1A1_mass_value_g\n\n  has unit   \n\n“3.75”^^xsd:float\n\n“3.75”^^xsd:float   \n\n“3.75”^^xsd:float->_:N1A1_mass_value_kg\n\n  has quantity   \n\nkg\n\nkg   \n\nkg->_:N1A1_mass_value_kg\n\n  has unit  \n\n\n\n\n\n\n\n- subject: N1A1\n  type: Adelie Penguin (Pygoscelis adeliae)\n  has attribute:\n    - type: mass\n      has value:\n        - _:N1A1_mass_value_g\n        - _:N1A1_mass_value_kg\n- subject: _:N1A1_mass_value_g\n  type: mass\n  has quantity: 3750\n  has unit: g\n- subject: _:N1A1_mass_value_kg\n  type: mass\n  has quantity: 3.750\n  has unit: kg\n  conversion of: _:N1A1_mass_value_g\n\n\n:N1A1\n  a NCBITaxon:9238 ; # 'Adelie Penguin (Pygoscelis adeliae)'\n  :hasAttribute [\n    a PATO:0000125 ; # 'mass'\n    :hasValue _:N1A1_mass_value_g , _:N1A1_mass_value_kg\n  ] .\n\n:_:N1A1_mass_value_g\n  a PATO:0000125 ; # 'mass'\n  :hasQuantity \"3750\"^^xsd:integer ;\n  :hasUnit unit:g .\n\n:_:N1A1_mass_value_kg\n  a PATO:0000125 ; # 'mass'\n  :hasQuantity \"3.75\"^^xsd:float ;\n  :hasUnit :kg ;\n  :conversionOf _:N1A1_mass_value_g .\n\n\n\nFrom an ontological perspective, there might only be one value here, and we just refer to it by different names practical reasons."
  },
  {
    "objectID": "primer.html#penguin-mass-ascertained",
    "href": "primer.html#penguin-mass-ascertained",
    "title": "Primer on Qualitative and Quantitative Values",
    "section": "Penguin Mass Ascertained",
    "text": "Penguin Mass Ascertained\nWhen talking about a value, we might be interested in what caused that value, or we might be interested in how we know what that value is. The measurement and conversion processes discussed above tell us how we know a value, but there are many other ways.\nFor example, we might want to talk about the average weight of N1A1, accounting for multiple mass measurements. Our data and diagrams should have the same shape as in the measurement case.\n\nCode\ndisplay(context, \"\"\"\nsubject: N1A1\ntype: Adelie Penguin (Pygoscelis adeliae)\nhas attribute:\n  - type: mass\n    has value:\n      - type: mass\n        ascertained by:\n          - type: averaging data transformation\n\"\"\")\n\n\nDiagramYAMLTurtle\n\n\n\n\n\n\n\n\n\nG\n\n  \n\nAdelie Penguin (Pygoscelis adeliae)\n\n Adelie Penguin   \n\nmass\n\n mass   \n\naveraging data transformation\n\n averaging data transformation   \n\nN1A1\n\n N1A1   \n\nN1A1->Adelie Penguin (Pygoscelis adeliae)\n\n    \n\n_22\n\n   \n\nN1A1->_22\n\n  has attribute   \n\n_22->mass\n\n    \n\n_23\n\n   \n\n_22->_23\n\n  has value   \n\n_23->mass\n\n    \n\n_24\n\n   \n\n_23->_24\n\n  ascertained by   \n\n_24->averaging data transformation\n\n   \n\n\n\n\n\n\n\nsubject: N1A1\ntype: Adelie Penguin (Pygoscelis adeliae)\nhas attribute:\n  - type: mass\n    has value:\n      - type: mass\n        ascertained by:\n          - type: averaging data transformation\n\n\n:N1A1\n  a NCBITaxon:9238 ; # 'Adelie Penguin (Pygoscelis adeliae)'\n  :hasAttribute [\n    a PATO:0000125 ; # 'mass'\n    :hasValue [\n      a PATO:0000125 ; # 'mass'\n      :ascertained by [\n        a OBI:0200170 # 'averaging data transformation'\n      ]\n    ]\n  ] .\n\n\n\nThe ‘ascertained by’ relation is not causal. Calculating the average did not cause the mass value. Calculating the average is how we know the mass value. ‘measured by’ and ‘conversion of’ are subproperties of ‘ascertained by’. They are important enough that they deserve special treatment. The general ‘ascertained by’ relation could be used when we:\n\ncalculate a value\nestimate a value\ncurate a value from the literature\n\nIn each case we can point to a planned process that ascerained the value. We can say more about the inputs, ouputs, participants, timing, etc. of those planned processes.\nFor the practical reasons discussed above for unit conversion, it is best for one value to have no more than one ascertaining process, including measurement and conversion processes. Even if five processes come up with the same scalar “3750g”, for practical purposes we should use five different values.\nNOTE: In previous drafts I used the word ‘determine’, but changed to ‘ascertain’ to avoid any connotations of causation or choice, and to avoid other confusion with “determinate” and “determinable” terminology."
  }
]